# 1. Выяснить тип результата выражений:
# 15 * 3
# 15 / 3
# 15 // 2
# 15 ** 2
print(15 * 3,end=' ')
print(type(15 * 3))
print(15 / 3,end=' ')
print(type(15 / 3))
print(15 // 2,end=' ')
print(type(15 // 2))
print(15 ** 2,end=' ')
print(type(15 ** 2))

# 2. Дан список:
# ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']
# Необходимо его обработать — обособить каждое целое число (вещественные не трогаем) кавычками (добавить кавычку до и кавычку после элемента списка, являющегося числом) и дополнить нулём до двух целочисленных разрядов:
# ['в', '"', '05', '"', 'часов', '"', '17', '"', 'минут', 'температура', 'воздуха', 'была', '"', '+05', '"', 'градусов']
#
# Сформировать из обработанного списка строку:
# в "05" часов "17" минут температура воздуха была "+05" градусов
#
# Подумать, какое условие записать, чтобы выявить числа среди элементов списка? Как модифицировать это условие для чисел со знаком?
# Примечание: если обособление чисел кавычками не будет получаться - можете вернуться к его реализации позже. Главное: дополнить числа до двух разрядов нулём!
my_list = ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']
new_list = []
for par in my_list:
    if par.isdigit():
        new = str(f'\"{int(par):02}\"')
    elif par[1:].isdigit():
        new = str(f'\"{par[0]}{int(par[1:]):02}\"')
    else:
        new = par
    new_list.extend([new])
print(" ".join(new_list))

# 3. * (вместо задачи 2) Решить задачу 2 не создавая новый список (как говорят, in place). Эта задача намного серьёзнее, чем может сначала показаться.
my_list = ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']
for par in my_list:
    if par.isdigit():
        print(f'\"{int(par):02}\"', end=' ')
    elif par[1:].isdigit():
        print(f'\"{par[0]}{int(par[1:]):02}\"', end=' ')
    else:
        print(par, end=' ')
print()
# 4. Дан список, содержащий искажённые данные с должностями и именами сотрудников:
# ['инженер-конструктор Игорь', 'главный бухгалтер МАРИНА', 'токарь высшего разряда нИКОЛАй', 'директор аэлита']
# Известно, что имя сотрудника всегда в конце строки. Сформировать и вывести на экран фразы вида: 'Привет, Игорь!' Подумать, как получить имена сотрудников из элементов списка, как привести их к корректному виду. Можно ли при этом не создавать новый список?
my_list = ['инженер-конструктор Игорь', 'главный бухгалтер МАРИНА', 'токарь высшего разряда нИКОЛАй', 'директор аэлита']
for par in my_list:
    name = par.split()[-1]
    print('Привет, %s' % name.title())

# 5. Создать список, содержащий цены на товары (10–20 товаров), например:
# [57.8, 46.51, 97, ...]
# Вывести на экран эти цены через запятую в одну строку, цена должна отображаться в виде <r> руб <kk> коп (например «5 руб 04 коп»). Подумать, как из цены получить рубли и копейки, как добавить нули, если, например, получилось 7 копеек или 0 копеек (должно быть 07 коп или 00 коп).
# Вывести цены, отсортированные по возрастанию, новый список не создавать (доказать, что объект списка после сортировки остался тот же).
# Создать новый список, содержащий те же цены, но отсортированные по убыванию.
# Вывести цены пяти самых дорогих товаров. Сможете ли вывести цены этих товаров по возрастанию, написав минимум кода?
prices = [57.8, 46.51, 97, 59.25, 47, 987.1, 10, 256]
import math
print(id(prices))
prices.sort()
print(id(prices))
for par in prices:
    rub = math.floor(par*100 // 100)
    cop = math.floor(par*100 % 100)
    print(f'{rub} руб {int(cop):02} коп,', end=' ')
print()

new_list = prices[:]
new_list.sort(reverse=1)
print(new_list[:5])